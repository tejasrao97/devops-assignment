apiVersion: {{ include "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }} 
      {{- include "common.appLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.appLabels" . | nindent 8 }}
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.initcontainers.enabled }}
      initContainers:
        {{- with .Values.initcontainersfields }}
          {{- tpl (toYaml . | nindent 6) $ }}
        {{- end }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
          {{- toYaml .Values.podSecurityContextFields | nindent 8 }}
      {{- end }}
      {{- if .Values.customServiceAccount.enabled }}
      serviceAccountName: {{ .Values.customServiceAccount.name }}
      {{- else if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}  
          ports:
          {{- with .Values.Ports }}
              {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.command.enabled }}
          command: {{ .Values.command.cmd }}
          {{- end }}
          {{- if .Values.arguments.enabled }}
          args: {{ .Values.arguments.args }}
          {{- end }}
          env:
            {{- /*
             Mention the Mandatory Default ENV Values(Don't Remove the values added below)
            */}}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.extraEnv.enabled }}
               {{- range $value := .Values.extraEnvFields }}
            - name: {{ $value.envName }}
              value: {{ $value.envValue | quote }}
               {{- end }}
            {{- end }}
            {{- if .Values.configmapEnvKey.enabled }}
              {{- range $value := .Values.configmapEnvKeyField }}
            - name: {{ $value.envKeyName }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $value.configMapName }}
                  key: {{ $value.envkey }}
              {{- end }}
            {{- end }}
            {{- if .Values.secretEnvKey.enabled }}
              {{- range $value := .Values.secretEnvKeyField }}
            - name: {{ $value.envKeyName }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.secretName }}
                  key: {{ $value.envkey }}
              {{- end }}
            {{- end }}
            {{- if .Values.customPodEnv.enabled }}
              {{- with .Values.customPodEnvFields }}
                {{- toYaml . | nindent 12 }}
              {{- end }}
            {{- end }}
          envFrom:
            {{- if .Values.configmapEnvFrom.enabled }}
              {{- range $value := .Values.configmapEnvFromField }}
          - configMapRef:
              name: {{ $value.configMapName }}
              {{- end }}
            {{- end }}
            {{- if .Values.secretEnvFrom.enabled }}
              {{- range $value := .Values.secretEnvFromField }}
          - secretRef:
              name: {{ $value.secretName }}
              {{- end }}
            {{- end }}
          volumeMounts:
          {{- /*
             Custom volume mounts can be mentioned here from values.yaml
          */}}
          {{- if .Values.customVolumeMounts.enabled }}
              {{- toYaml .Values.customVolumeMounts.volumeMountFields | nindent 10 }}
          {{- end }}
          {{- if .Values.Probes.enable }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext:
            {{- toYaml .Values.containerSecurityContextFields | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- /*
          Mention the custom volumes here, please refer to the below snippet
      */}}
      {{- if .Values.secretMounts.enabled }}
        {{- with .Values.secretMounts.secretNames }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.configmapMounts.enabled }}
        {{- with .Values.configmapMounts.configNames }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
